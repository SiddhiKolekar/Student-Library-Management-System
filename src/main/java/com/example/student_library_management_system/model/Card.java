package com.example.student_library_management_system.model;

import com.example.student_library_management_system.Enum.CardStatus;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Entity
@Data
@AllArgsConstructor
@NoArgsConstructor
@Table(name = "card")
public class Card {
    @Id
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;
    @Column(name = "created_on", nullable = false)
    @CreationTimestamp //auto time is set when the entry/card is created
    private Date createdOn; //it is autogenerated
    @Column(name = "updated_on", nullable = false)
    @UpdateTimestamp //updates time when a entry/card is created
    private Date updatedOn;//it is autogenerated
    @Column(name = "card_status", nullable = false)
    @Enumerated(value = EnumType.STRING)
    private CardStatus cardStatus;

    @OneToOne
    @JoinColumn //in foreign key table we add join column
    private Student student; //this is used in parent Student model class while doing bidirectional mapping

    @OneToMany(mappedBy = "card", cascade = CascadeType.ALL)
    private List<Book> bookIssued = new ArrayList<>();

    @OneToMany(mappedBy = "card", cascade = CascadeType.ALL)
    private List<Transaction> transactionList = new ArrayList<>();
}
